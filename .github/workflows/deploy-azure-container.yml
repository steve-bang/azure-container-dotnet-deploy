name: Deploy JFramework to azure container

on:
  workflow_dispatch:
  push:
    branches: ["develop"]
env:
  AZURE_CONTAINER_REGISTRY: your-container-registry
  CONTAINER_APP_NAME: your-container-app
  RESOURCE_GROUP: your-resource-group
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: 1. Set up .NET core env 
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x

      - name: 2. Build 
        run: dotnet build --configuration Release

      - name: 3. Setup docker buildx 
        uses: docker/setup-buildx-action@v3

      - name: 4. Login to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: 5. Build and push image to ACR
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_NAME }}:${{ github.sha }}
          file: ./Dockerfile

      - name: 6. Azure CLI Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 7. Log in to registry
        run: az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}


      - name: 8. Deploy to Azure Container App
        uses: azure/container-apps-deploy-action@v1
        with:
            imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_NAME }}:${{ github.sha }}
            resourceGroup: ${{ env.RESOURCE_GROUP }}
            containerAppName: ${{ env.CONTAINER_APP_NAME }}
            acrName: ${{ env.AZURE_CONTAINER_REGISTRY }}
            ingress: external
            location: southeastasia
            containerAppEnvironment: 
            environmentVariables: |
              ASPNETCORE_ENVIRONMENT=Development
    